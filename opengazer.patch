diff -aur opengazer-0.1.2/FaceDetector.h opengazer-0.1.2-mod/FaceDetector.h
--- opengazer-0.1.2/FaceDetector.h	2007-08-27 12:25:09.000000000 -0400
+++ opengazer-0.1.2-mod/FaceDetector.h	2009-08-29 02:13:57.000000000 -0400
@@ -7,7 +7,7 @@
 
 public:
     static FaceDetector facedetector;
-    FaceDetector(char *cascadename="haarcascade_frontalface_alt.xml");
+    FaceDetector(char *cascadename="/usr/share/opengazer/haarcascade_frontalface_alt.xml");
     ~FaceDetector();
     vector<CvRect> detect(const IplImage *img);
 };
diff -aur opengazer-0.1.2/GazeTracker.cpp opengazer-0.1.2-mod/GazeTracker.cpp
--- opengazer-0.1.2/GazeTracker.cpp	2007-08-27 12:25:10.000000000 -0400
+++ opengazer-0.1.2-mod/GazeTracker.cpp	2009-08-29 02:13:57.000000000 -0400
@@ -118,7 +118,7 @@
 
 void GazeTracker::save(void) {
     CvFileStorage *out = 
-	cvOpenFileStorage("calibration.xml", NULL, CV_STORAGE_WRITE);
+	cvOpenFileStorage("~/.opengazer/calibration.xml", NULL, CV_STORAGE_WRITE);
     save(out, "GazeTracker");
     cvReleaseFileStorage(&out);
 }
@@ -132,7 +132,7 @@
 
 void GazeTracker::load(void) {
     CvFileStorage *in = 
-	cvOpenFileStorage("calibration.xml", NULL, CV_STORAGE_READ);
+	cvOpenFileStorage("~/.opengazer/calibration.xml", NULL, CV_STORAGE_READ);
     CvFileNode *root = cvGetRootFileNode(in);
     load(in, cvGetFileNodeByName(in, root, "GazeTracker"));
     cvReleaseFileStorage(&in);
diff -aur opengazer-0.1.2/MainGazeTracker.cpp opengazer-0.1.2-mod/MainGazeTracker.cpp
--- opengazer-0.1.2/MainGazeTracker.cpp	2007-08-27 12:25:10.000000000 -0400
+++ opengazer-0.1.2-mod/MainGazeTracker.cpp	2009-08-29 02:20:28.000000000 -0400
@@ -85,9 +85,14 @@
 }
 
 void MainGazeTracker::savepoints() {
+    string trackerfile, pointsfile;
+    trackerfile = getenv("HOME");
+    pointsfile= trackerfile;
+    trackerfile += "/.opengazer/tracker";
+    pointsfile += "/.opengazer/points.txt";
     try {
-	tracking->tracker.save("tracker", "points.txt", videoinput->frame);
-	autoreload = true;
+        tracking->tracker.save(trackerfile.c_str(), pointsfile.c_str(), videoinput->frame);
+        autoreload = true;
     }
     catch (ios_base::failure &e) {
 	cout << e.what() << endl;
@@ -95,8 +100,13 @@
 }
 
 void MainGazeTracker::loadpoints() {
+    string trackerfile, pointsfile;
+    trackerfile = getenv("HOME");
+    pointsfile= trackerfile;
+    trackerfile += "/.opengazer/tracker";
+    pointsfile += "/.opengazer/points.txt";
     try {
-	tracking->tracker.load("tracker", "points.txt", videoinput->frame);
+        tracking->tracker.load(trackerfile.c_str(), pointsfile.c_str(), videoinput->frame);
 	autoreload = true;
     }
     catch (ios_base::failure &e) {
@@ -168,7 +178,7 @@
     shared_ptr<WindowPointer> 
 	pointer(new WindowPointer(WindowPointer::PointerSpec(30,30,1,0,0)));
 
-    ifstream calfile("calpoints.txt");
+    ifstream calfile("/usr/share/opengazer/calpoints.txt");
 
     shared_ptr<Calibrator> 
 	calibrator(new Calibrator(framecount, tracking, 
diff -aur opengazer-0.1.2/Makefile opengazer-0.1.2-mod/Makefile
--- opengazer-0.1.2/Makefile	2007-08-27 12:25:09.000000000 -0400
+++ opengazer-0.1.2-mod/Makefile	2009-08-29 02:13:57.000000000 -0400
@@ -1,9 +1,9 @@
 # required libraries: vxl, opencv, boost, gtkmm
 
-VXLDIR = /opt
+VXLDIR = /usr
 VERSION = opengazer-0.1.2
 CPPFLAGS = -Wall -g -O3
-LINKER = -L$(VXLDIR)/lib -L/usr/local/lib -lm -ldl -lvnl -lmvl -lvnl_algo -lvgl -lgthread-2.0 
+LINKER = -L$(VXLDIR)/lib -L/usr/local/lib -lm -ldl -lmvl -lvnl_algo -lvnl -lv3p_netlib -lnetlib -lvcl -lvgl -lgthread-2.0 
 
 # change the following line if your vxl library is installed elsewhere
 INCLUDES = $(foreach prefix,/usr/local/include $(VXLDIR)/include $(VXLDIR)/include/vxl, \
@@ -24,7 +24,7 @@
 	g++ -c $(CPPFLAGS) -o $@ `pkg-config cairomm-1.0 opencv gtkmm-2.4 --cflags` $(INCLUDES) $< 
 
 opengazer: 	$(objects)
-	g++ $(CPPFLAGS) -o $@ `pkg-config cairomm-1.0 opencv gtkmm-2.4 --libs`  $(LINKER) $^
+	g++ $(CPPFLAGS) -o $@ `pkg-config cairomm-1.0 opencv gtkmm-2.4 --libs`  $^ $(LINKER)
 
 include $(patsubst %.cpp,%.o.depends,$(sources))
 
diff -aur opengazer-0.1.2/PointTracker.h opengazer-0.1.2-mod/PointTracker.h
--- opengazer-0.1.2/PointTracker.h	2007-08-27 12:25:10.000000000 -0400
+++ opengazer-0.1.2-mod/PointTracker.h	2009-08-29 02:13:57.000000000 -0400
@@ -8,7 +8,7 @@
 using namespace std;
 typedef vgl_vector_2d<double> HomPoint;
 
-class TrackingException: public exception {};
+class TrackingException: public std::exception {};
 
 class PointTracker {
 public:
